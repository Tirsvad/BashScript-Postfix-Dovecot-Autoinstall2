#!/bin/bash
DEBIAN_FRONTEND=noninteractive

set -e # Exit immediately if a command exits with a non-zero status.
set -u #

source ./config

firewall_delete_rule () {
  grep -v "$1" $FIREWALL_RULES_UP_FILENAME > /etc/iptables.new.rules
  iptables-restore < /etc/iptables.new.rules
  iptables-save > /etc/iptables.up.rules
}

firewall_add_rule () {
  firewall_delete_rule "dport $1"
  firewall_delete_rule "sport $1"
  iptables -A INPUT -p tcp --dport $1 -m state --state NEW,ESTABLISHED -j ACCEPT
  iptables -A OUTPUT -p tcp --sport $1 -m state --state ESTABLISHED -j ACCEPT
  iptables-save > /etc/iptables.up.rules
}

echo -e "\n********************************************************"
echo -e "* Installing postfix"
echo -e "********************************************************"

debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
debconf-set-selections <<< "postfix postfix/mailname string $POSTFIX_HOSTMASTER"

aptitude -y -q install postfix
case "${SQL_SERVER}" in
  psql)
    aptitude -y -q install postfix-pgsql
  ;;
  mysql)
    aptitude -y -q install postfix-mysql
  ;;
esac

echo -e "\n********************************************************"
echo -e "* Setting firewall"
echo -e "********************************************************"

# Allow Sendmail
[ ! -z "$FIREWALL_SENDMAIL" ] && {
  firewall_add_rule $FIREWALL_SENDMAIL
}

# Allow sendmail via submission port
[ ! -z "$FIREWALL_SENDMAIL_SUBMISSION" ] && {
  firewall_add_rule $FIREWALL_SENDMAIL_SUBMISSION
}

# Allow IMAP
[ ! -z "$FIREWALL_IMAP" ] && {
  firewall_add_rule $FIREWALL_IMAP
}

# Allow IMAPs
[ ! -z "$FIREWALL_IMAPS" ] && {
  firewall_add_rule $FIREWALL_IMAPS
}

# Allow pop
[ ! -z "$FIREWALL_POP" ] && {
  firewall_add_rule $FIREWALL_POP
}

# Allow pops
[ ! -z "$FIREWALL_POPS" ] && {
  firewall_add_rule $FIREWALL_POPS
}

# Allow pop3s
[ ! -z "$FIREWALL_POPS3" ] && {
  firewall_add_rule $FIREWALL_POPS3
}

echo -e "\n********************************************************"
echo -e "* Making database for user authentication"
echo -e "********************************************************"

[ -z "$SQL_SERVER" ] && {
  echo "* Missing SQL server. Can't find any one installed :("
  exit 1
}

case "${SQL_SERVER}" in
  psql)
    #TODO sql script that make DB for dovecot
  ;;
  mysql)
    cat <<EOF | mysql -uroot -p$SQL_SERVER_ROOT_PASSWORD
    
    	CREATE DATABASE IF NOT EXISTS $DB_MAIL_DB_NAME;
    	GRANT SELECT ON $DB_MAIL_DB_NAME.* TO '$DB_USER'@'127.0.0.1' IDENTIFIED BY '$DB_USER_PASS';
    	FLUSH PRIVILEGES;
    	USE $DB_MAIL_DB_NAME;
    	CREATE TABLE IF NOT EXISTS virtual_domains (
    	id  INT NOT NULL AUTO_INCREMENT,
    	name VARCHAR(50) NOT NULL,
    	PRIMARY KEY (id)
    	) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    	CREATE TABLE IF NOT EXISTS virtual_users (
    	id INT NOT NULL AUTO_INCREMENT,
    	domain_id INT NOT NULL,
    	password VARCHAR(106) NOT NULL,
    	email VARCHAR(120) NOT NULL,
    	PRIMARY KEY (id),
    	UNIQUE KEY email (email),
    	FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
    	) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    	CREATE TABLE IF NOT EXISTS virtual_aliases (
    	id INT NOT NULL AUTO_INCREMENT,
    	domain_id INT NOT NULL,
    	source varchar(100) NOT NULL,
    	destination varchar(100) NOT NULL,
    	PRIMARY KEY (id),
    	FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
    	) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    	INSERT INTO servermail.virtual_domains
    	(id ,name)
    	VALUES
    	('1', '$DOMAIN'),
    	('2', 'mail.$DOMAIN');
    	INSERT INTO servermail.virtual_users
    	(id, domain_id, password , email)
    	VALUES
    	('1', '1', ENCRYPT('$PASSWORD', CONCAT('\$6\$', SUBSTRING(SHA(RAND()), -16))), '$EMAIL');
    EOF    
  ;;
esac

echo -e "DONE install postfix"
